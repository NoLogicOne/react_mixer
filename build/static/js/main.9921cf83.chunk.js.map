{"version":3,"sources":["model/data/initialState.js","model/reducer.js","model/constants.js","Groups/Group/Group.js","Groups/Groups.js","App.js","model/actionCreators.js","serviceWorker.js","index.js"],"names":["data","groups","group1","isSample","group2","group3","mix","saves","save1","human_name","sample","state","arguments","length","undefined","action","type","text","idx","name","res","Object","objectSpread","keys","value","samples","key","push","samplesArray","filter","c","map","split","mixArrays","join","trim","names","id","Date","now","includes","prompt","arrayOfArrays","reduce","acc","curr","arr2","concat","toConsumableArray","Group","_ref","_ref$sample","_ref$isSample","_ref$saves","inputText","changeWindow","loadSample","saveSample","deleteSave","_useState","useState","_useState2","slicedToArray","search","setSearch","save","def","renderSample","react_default","a","createElement","className","onClick","e","cols","rows","defaultValue","onChange","target","onKeyDown","ctrlKey","keyCode","preventDefault","renderLoad","array","s","RegExp","test","data-tooltip","onContextMenu","Groups","addWindow","throwed","objectWithoutProperties","Fragment","arrayGroups","Groups_Group_Group","assign","renderGroups","App","_this$props$data","this","props","onMixChange","getMix","src_Groups_Groups","Component","connect","stateProps","dispatchProps","dispatch","AC","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","reducer","combineReducers","reducers","store","createStore","loaded","localStorage","mixer","JSON","parse","dir","loadState","subscribe","saved","stringify","getState","setItem","ReactDOM","render","es","src_App_0","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.9921cf83.chunk.js","sourcesContent":["export const data = {\r\n\tgroups: {\r\n\t\tgroup1:{\r\n\t\t\tisSample: true\r\n\t\t},\r\n\t\tgroup2:{\r\n\r\n\t\t},\r\n\t\tgroup3:{\r\n\r\n\t\t}\r\n\t},\r\n\tmix: \"\",\r\n\tsaves: {\r\n\t\tsave1: {\r\n\t\t\thuman_name: \"Подборка Питер\",\r\n\t\t\tsample: \"Спб\\nСанкт-Петербург\\nПитер\"\r\n\t\t}\r\n\t}\r\n}","import {data} from \"./data/initialState.js\"\r\nimport * as types from \"./constants.js\"\r\n\r\n\r\nexport const groups = (state = data.groups, action) => {\r\n\tlet { type } = action\r\n\tlet { text, idx, name, sample } = action\r\n\t\r\n\tlet res = {...state}\r\n\t\r\n\tswitch (type) {\r\n\t\tcase types.ADD_WINDOW:\r\n\t\t\tlet id = \"group\" + (Object.keys(state).length + 1);\r\n\t\t\tres[id] = {}\r\n\t\t\treturn res\r\n\t\t\t\r\n\t\tcase types.INPUT_TEXT:\r\n\t\t\t\tres[idx].sample = text\r\n\t\t\t\treturn res\r\n\t\t\t\t\r\n\t\tcase types.CHANGE_WINDOW:\r\n\t\t\tres[idx].isSample = !res[idx].isSample\r\n\t\t\treturn res\r\n\t\t\t\r\n\t\tcase types.LOAD_SAMPLE:\r\n\t\t\tres[idx].sample = sample\r\n\t\t\treturn res\r\n\t\t\t\t\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\t\t\t\t\t\r\nexport const mix = (state = data.mix, action) => {\r\n\tlet { groups, value } = action\r\n\tswitch (action.type) {\r\n\t\tcase types.GET_MIX:\r\n\t\t\tlet samples = []\r\n\r\n\t\t\tfor (let key in groups){\r\n\t\t\t\tsamples.push(groups[key].sample)\r\n\t\t\t}\r\n\r\n\t\t\tlet samplesArray = samples\r\n\t\t\t\t// обработка null, undefined, \"\" одновременно\r\n\t\t\t\t.filter(c => !!c)\r\n\t\t\t\t.map(c => c.split(\"\\n\"))\r\n\t\t\t\r\n\t\t\treturn mixArrays(samplesArray)\r\n\t\t\t\t.filter(c => c !== [])\r\n\t\t\t\t.join(\"\\n\")\r\n\t\t\t\t.trim()\r\n\t\t\r\n\t\tcase types.ON_MIX_CHANGE:\r\n\t\t\treturn value\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\t\r\nexport const saves = (state = data.saves, action) => {\r\n\tlet { sample, name } = action\r\n\tlet res = {...state}\r\n\t\r\n\tswitch (action.type) {\r\n\t\tcase types.SAVE_SAMPLE:\r\n\t\t\tif(!name) return state\r\n\t\t\tlet names = []\r\n\t\t\tlet id = \"save\" + Date.now();\t\t\t\r\n\t\t\t\r\n\t\t\tfor (let key in state) {\r\n\t\t\t\tnames.push(state[key].human_name)\r\n\t\t\t}\r\n\t\t\tif(names.includes(name)){\r\n\t\t\t\tlet agree = prompt(\"Такое имя уже существует, заменить?\", \"да\")\r\n\t\t\t\tif(agree !== \"да\"){\r\n\t\t\t\t\treturn state\r\n\t\t\t\t}\r\n\t\t\t\tfor (let key in state) {\r\n\t\t\t\t\tif(state[key].human_name === name){\r\n\t\t\t\t\t\tid = key\r\n\t\t\t\t\t\tbreak\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tres[id] = {}\r\n\t\t\tres[id].human_name = name\r\n\t\t\tres[id].sample = sample\r\n\r\n\t\t\treturn res\r\n\t\t\r\n\t\tcase types.DELETE_SAVE:\r\n\t\t\tdelete res[name]\r\n\t\t\treturn res\r\n\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\nconst mixTwoArrays = (arr1, arr2) => \r\n\tarr1.reduce((acc, curr) => \r\n\t\t[...acc, ...arr2.map(c => c + \" \" + curr)]\r\n\t, [])\r\n\r\nconst mixArrays = (arrayOfArrays) => {\r\n\treturn arrayOfArrays.reduce((acc, curr) => {\r\n\r\n\t\tif(acc.length === 0) return curr\r\n\t\tif(curr.length === 0) return acc\r\n\t\t\r\n\t\treturn mixTwoArrays(curr, acc)\r\n\t}, [])\r\n}","export const ADD_WINDOW = \"ADD_WINDOW\"\r\nexport const CHANGE_WINDOW = \"CHANGE_WINDOW\"\r\nexport const SORT_LINKS = \"SORT_LINKS\"\r\n\r\nexport const INPUT_TEXT = \"INPUT_TEXT\"\r\n\r\nexport const GET_MIX = \"GET_MIX\"\r\nexport const ON_MIX_CHANGE = \"ON_MIX_CHANGE\"\r\n\r\nexport const SAVE_SAMPLE = \"SAVE_SAMPLE\"\r\nexport const LOAD_SAMPLE = \"LOAD_SAMPLE\"\r\nexport const DELETE_SAVE = \"DELETE_SAVE\"","import React, {useState} from \"react\"\r\n\r\nimport \"./Group.css\"\r\n\r\nconst Group = ({sample = \"\", \r\n               isSample = false, \r\n               saves = {}, \r\n               inputText,\r\n               idx,\r\n               changeWindow,\r\n               loadSample,\r\n               saveSample,\r\n               deleteSave\r\n            }) => {\r\n    \r\n    let [search, setSearch] = useState(\"\")\r\n    \r\n    const save = (def = \"\") => {\r\n        saveSample(idx, prompt(\"Человеческое имя\", def))\r\n    }\r\n    \r\n    const renderSample = \r\n        <div className=\"mixer__group\">\r\n            <div onClick={save} \r\n                className=\"mixer__sample_header\">Sample</div>\r\n            <div className=\"mixer__sample_load\"\r\n                 onClick={e => changeWindow(idx)}>\r\n                &dArr;\r\n            </div>\r\n            <textarea \r\n                className=\"mixer__sample_wrapper\"\r\n                cols=\"30\" \r\n                rows=\"10\"\r\n                defaultValue={sample}\r\n                onChange={e => inputText(e.target.value, idx)}\r\n                onKeyDown={\r\n                    e => {\r\n                        if (e.ctrlKey && e.keyCode === 83) {\r\n                            e.preventDefault();\r\n                            save(sample.split(\"\\n\")[0])\r\n                        }\r\n                    }\r\n                }\r\n            />\r\n        </div>\r\n\r\n    const createLink = (save, name) => (\r\n        <button key={save.human_name} \r\n                className=\"mixer__load_link\"\r\n                data-tooltip=\"для удаения кликнуть правой кнопкой мыши\"\r\n                onClick={\r\n                    e => {\r\n                        loadSample(idx, name)\r\n                        changeWindow(idx)\r\n                    }\r\n                }\r\n                onContextMenu={\r\n                    e => {\r\n                        e.preventDefault()\r\n                        if(prompt(\"удалить?\", \"да\") === \"да\"){\r\n                            deleteSave(name)\r\n                        }\r\n                    }\r\n                }>\r\n            {save.human_name}\r\n        </button>\r\n    )\r\n\r\n    const renderLoad = \r\n        <div className=\"mixer__group\">\r\n            <input \r\n                type=\"text\" \r\n                className=\"mixer__load_search\"\r\n                value={search}\r\n                onChange={e => setSearch(e.target.value)}/>\r\n            <div className=\"mixer__load_sample\"\r\n                 onClick={e => changeWindow(idx)}>\r\n                &larr;\r\n            </div>\r\n            <div className=\"mixer__load_link_wrapper\">\r\n            {\r\n                (() => {\r\n                    let array = []\r\n\r\n                    for (const key in saves) {\r\n                        array.push([saves[key], key])\r\n                    }\r\n\r\n                    let res = array\r\n                        .filter(s => new RegExp(search, \"ig\").test(s[0].human_name))\r\n                        .map(s => createLink(s[0], s[1]))\r\n                    \r\n                    if(res.length === 0) {\r\n                        return (\r\n                            <div className=\"mixer__link_empty\">\r\n                                К сожалению, подборок сейчас нет\r\n                            </div>\r\n                        ) \r\n                    }\r\n                    return res\r\n                })()\r\n            }\r\n            </div>\r\n        </div>\r\n\r\n    return (\r\n        <div className=\"mixer__group_wrapper\">\r\n            { \r\n                isSample \r\n                    ? renderSample \r\n                    : renderLoad\r\n            }\r\n        </div>\r\n    )\r\n} \r\n\r\nexport default Group","import React from \"react\"\r\n\r\nimport Group from \"./Group/Group.js\"\r\n\r\nconst Groups = ({groups, addWindow, ...throwed}) => {\r\n    \r\n    const renderGroups = () => {\r\n        let arrayGroups = []\r\n        \r\n        for(let key in groups){\r\n            arrayGroups.push([groups[key], key])\r\n        }\r\n\r\n        return arrayGroups.map( c => \r\n            <Group key={c[1]} idx={c[1]} {...c[0]} {...throwed} />\r\n        )\r\n    }\r\n\r\n    const AddButton = () => (\r\n        <button \r\n            value=\"MIX\" \r\n            className=\"mixer__add-group\"\r\n            id=\"mixer__add-group\"\r\n            onClick={addWindow}\r\n        />\r\n    )\r\n\r\n    return (\r\n        <>\r\n            <div id=\"mixer__groups\" className=\"mixer__groups\">\r\n                {renderGroups()}\r\n                <AddButton />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Groups","import React, {Component} from 'react';\nimport {connect} from 'react-redux'\nimport * as AC from './model/actionCreators.js'\n\nimport './App.css';\n\nimport Groups from \"./Groups/Groups.js\"\n\n\nclass App extends Component{\n  \n  render() {\n    const {groups, saves, mix} = this.props.data\n    const { onMixChange } = this.props\n\n    return (\n      <div className=\"App\">\n        <h1 onClick={this.props.getMix}>MIXER</h1>\n        <div className=\"mixer__hotkeys\">\n          <p>ctrl + A - добавить поле ввода</p>\n          <p>ctrl + Enter - смешать</p>\n          <p>ctrl + D - вернуться в стандартное состояние</p>\n          <p>ctrl + S - сохранить подборку</p>\n        </div>\n        <Groups groups={groups} saves={saves} {...this.props}/>\n        <textarea \n          className=\"mixer__result\"\n          cols=\"30\" \n          rows=\"10\"\n          value={mix}\n          onChange={e => onMixChange(e.target.value)} />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  data: state\n})\n\nconst mergeProps = (stateProps, dispatchProps) => {\n  let {data} = stateProps\n  let {dispatch} = dispatchProps\n\n  return {\n    data,\n    addWindow: () => {\n      dispatch(AC.addWindow())\n    },\n    inputText: (text, idx) => {\n      dispatch(AC.inputText(text, idx))\n    },\n    changeWindow: (idx) => {\n      dispatch(AC.changeWindow(idx))\n    },\n    loadSample: (idx, name) => {\n      dispatch(AC.loadSample(idx, name, data.saves))\n    },\n    saveSample: (idx, name) => {\n      dispatch(AC.saveSample(idx, name, data.groups))\n    },\n    getMix: () => {\n      dispatch(AC.getMix(data.groups))\n    },\n    onMixChange: (value) => {\n      dispatch(AC.onMixChange(value))\n    },\n    deleteSave: (name) => {\n      dispatch(AC.deleteSave(name))\n    }\n  }\n}\n\nexport default connect(\n  mapStateToProps, \n  null,\n  mergeProps)(App);\n","import * as types from \"./constants.js\"\r\n\r\nexport const inputText = (text, idx) => {\r\n    return {\r\n        type: types.INPUT_TEXT,\r\n        text,\r\n        idx\r\n    }\r\n}\r\n\r\nexport const addWindow = () => ({\r\n    type: types.ADD_WINDOW\r\n})\r\n\r\nexport const saveSample = (idx, name, groups) => ({\r\n    type: types.SAVE_SAMPLE,\r\n    sample: groups[idx].sample,\r\n    name\r\n})\r\n\r\nexport const loadSample = (idx, name, saves) => ({\r\n    type: types.LOAD_SAMPLE,\r\n    idx,\r\n    sample: saves[name].sample\r\n})\r\n\r\nexport const changeWindow = (idx) => ({\r\n    type: types.CHANGE_WINDOW,\r\n    idx\r\n})\r\n\r\nexport const getMix = (groups) => ({\r\n    type: types.GET_MIX,\r\n    groups\r\n})\r\n\r\nexport const onMixChange = (value) => ({\r\n    type: types.ON_MIX_CHANGE,\r\n    value\r\n})\r\n\r\nexport const deleteSave = (name) => ({\r\n    type: types.DELETE_SAVE,\r\n    name\r\n})","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {Provider} from 'react-redux'\nimport {createStore, combineReducers} from 'redux'\n\nimport * as reducers from \"./model/reducer.js\"\nimport {data} from \"./model/data/initialState.js\"\n\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nimport './index.css'\n\nconst reducer = combineReducers(reducers)\n// const store = createStore(reducer, data)\nconst store = createStore(reducer, loadState())\n\nconst saveState = () => {\n\tlet saved = JSON.stringify(store.getState())\n\tif(!localStorage.mixer){\n\t\tlocalStorage.setItem(\"mixer\", saved)\n\t} else {\n\t\tlocalStorage.mixer = saved\n\t}\n}\n\nfunction loadState() {\n\tlet loaded = data\n\n\tif(localStorage.mixer !== undefined){\n\t\ttry{\n\t\t\tloaded = JSON.parse(localStorage.mixer)\n\t\t}  catch(e){\n\t\t\tconsole.dir(e)\n\t\t\tconsole.dir(localStorage.mixer)\n\t\t}\n\t}\n\n\treturn loaded\n}\n\nstore.subscribe(saveState)\nstore.subscribe(() => {console.log(store.getState())})\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register()\n// serviceWorker.unregister();\n"],"sourceRoot":""}